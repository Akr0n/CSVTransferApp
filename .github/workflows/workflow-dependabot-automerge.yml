name: Dependabot auto-merge
on: pull_request_target

permissions:
  pull-requests: write
  contents: write
  issues: write
  checks: read

jobs:
  dependabot:
    runs-on: windows-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Wait for CI checks to pass
        if: ${{ contains(steps.metadata.outputs.dependency-names, 'actions/') && (steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch') }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pr = context.payload.pull_request.number;
            const ref = context.payload.pull_request.head.sha;

            core.info(`Waiting for combined status for ref ${ref}`);
            const maxAttempts = 40; // ~10 minutes with 15s interval
            const delayMs = 15000;
            let attempt = 0;
            while (attempt < maxAttempts) {
              const status = await github.rest.repos.getCombinedStatusForRef({ owner, repo, ref });
              core.info(`Attempt ${attempt + 1}: combined status = ${status.data.state}`);
              if (status.data.state === 'success') {
                core.info('All checks passed.');
                break;
              }
              if (status.data.state === 'failure') {
                core.setFailed('CI checks failed â€” aborting auto-merge.');
                return;
              }
              await new Promise(resolve => setTimeout(resolve, delayMs));
              attempt++;
            }
            if (attempt === maxAttempts) {
              core.setFailed('Timed out waiting for CI checks to finish.');
              return;
            }

      - name: Merge Dependabot PR via API
        if: ${{ contains(steps.metadata.outputs.dependency-names, 'actions/') && (steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch') }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const prNumber = context.payload.pull_request.number;
            try {
              const mergeResult = await github.rest.pulls.merge({ owner, repo, pull_number: prNumber, commit_title: `Auto-merged Dependabot PR #${prNumber}`, merge_method: 'merge' });
              core.info(`Merge result: ${JSON.stringify(mergeResult.data)}`);
            } catch (err) {
              core.setFailed(`Merge failed: ${err.message}`);
              throw err;
            }

      - name: Comment and label the PR about auto-merge
        if: ${{ contains(steps.metadata.outputs.dependency-names, 'actions/') && (steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch') }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const prNumber = context.payload.pull_request.number;
            const actor = context.actor;
            const body = `Auto-merged by workflow. Dependabot PR merged automatically because CI checks passed and update type was safe. (Triggered by @${actor})`;
            await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body });
            // Add label to indicate auto-merge
            try {
              await github.rest.issues.addLabels({ owner, repo, issue_number: prNumber, labels: ['auto-merged'] });
            } catch (e) {
              core.info('Could not add label (maybe labels are restricted): ' + e.message);
            }